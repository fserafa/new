{"version":3,"sources":["img/pedra.png","img/papel.png","img/tesoura.png","img/bolso.jpg","img/lula.jpg","components/Game.js","components/EndGame.js","components/PlayerControl.js","components/ComputerControl.js","components/HUD.js","actions/fight.js","pages/GameScreen.js","pages/PlayerSelection.js","reducers/index.js","reducers/todos.js","reducers/playerHP.js","reducers/computerHP.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Game","react_default","a","createElement","className","this","props","computerName","src","computerChoise","alt","playerName","playerChoise","Component","EndGame","result","PlayerControl","Pedra","onClick","Papel","Tesoura","ComputerControl","HUD","selection","name","HP","doDamagePlayer","type","doDamageComputer","GameScreen","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChoiseMade","e","setState","target","getComputerChoise","resolveGame","Choises","randomChoise","Math","round","random","_this$state","state","playerSelection","computerSelection","winnerName","damageLoser","_this$state2","localStorage","getItem","Lula","Bolsonaro","_this$state3","_this$props","playerHP","computerHP","components_HUD","components_ComputerControl","components_Game","components_PlayerControl","components_EndGame","connect","dispatch","bindActionCreators","fightActions","PlayerSelection","handlePlayerSelection","setItem","history","push","combineReducers","todos","arguments","length","undefined","action","concat","toConsumableArray","id","text","store","createStore","reducers","App","es","BrowserRouter","Switch","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2913182.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pedra.05c44179.png\";","module.exports = __webpack_public_path__ + \"static/media/papel.74f9a62a.png\";","module.exports = __webpack_public_path__ + \"static/media/tesoura.570ebdd1.png\";","module.exports = __webpack_public_path__ + \"static/media/bolso.cb0b200f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lula.c82f5333.jpg\";","import React, { Component } from 'react';\r\nimport '../pages/Game.css'\r\nclass Game extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"game-wrapper\">\r\n                <div>\r\n\r\n                    <h2>{this.props.computerName}</h2>\r\n                    <img className=\"image-controls\" src={this.props.computerChoise.src} alt={this.props.computerChoise.alt} />\r\n                </div>\r\n              \r\n                <div>\r\n\r\n                    <h2>{this.props.playerName}</h2>\r\n                    <img className=\"image-controls\" src={this.props.playerChoise.src} alt={this.props.playerChoise.alt} />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","import React, { Component } from 'react';\r\n\r\nclass EndGame extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.props.result}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EndGame; ","import React, { Component } from 'react';\r\nimport '../pages/Game.css';\r\nimport Pedra from '../img/pedra.png';\r\nimport Papel from '../img/papel.png';\r\nimport Tesoura from '../img/tesoura.png';\r\n\r\nclass PlayerControl extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img className=\"image-controls\" src={Pedra} alt=\"Pedra\" onClick={this.props.onClick}/>\r\n                <img className=\"image-controls\" src={Papel} alt=\"Papel\" onClick={this.props.onClick} />\r\n                <img className=\"image-controls\" src={Tesoura} alt=\"Tesoura\" onClick={this.props.onClick} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerControl;","import React, { Component } from 'react';\r\nimport '../pages/Game.css';\r\nimport Pedra from '../img/pedra.png';\r\nimport Papel from '../img/papel.png';\r\nimport Tesoura from '../img/tesoura.png';\r\n\r\nclass ComputerControl extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img className=\"image-controls\" src={Pedra} alt=\"Pedra\" />\r\n                <img className=\"image-controls\" src={Papel} alt=\"Papel\"  />\r\n                <img className=\"image-controls\" src={Tesoura} alt=\"Tesoura\"  />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComputerControl;","import React, { Component } from 'react';\r\nimport '../pages/Game.css';\r\n\r\nclass HUD extends Component {\r\n\r\n\r\n    render() {\r\n       \r\n\r\n        return (\r\n            <div className=\"hud\">\r\n                <div>\r\n                    <img className=\"hud-img\" src={this.props.selection.src} alt={this.props.selection.alt} />\r\n                </div>\r\n                <div className=\"hud-info\">\r\n                    <h2>{this.props.name}</h2>\r\n                    <div className=\"green-bar\">\r\n                        {this.props.HP}/10\r\n                        </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HUD;","export function doDamagePlayer() {\r\n    return {\r\n        type: 'DO_DMG_P',\r\n    }\r\n}\r\n\r\nexport function doDamageComputer() {\r\n    return {\r\n        type: 'DO_DMG_C',\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './Game.css'\r\nimport Game from '../components/Game';\r\nimport EndGame from '../components/EndGame';\r\nimport PlayerControl from '../components/PlayerControl';\r\nimport Pedra from '../img/pedra.png';\r\nimport Papel from '../img/papel.png';\r\nimport Tesoura from '../img/tesoura.png';\r\nimport Bolsonaro from '../img/bolso.jpg';\r\nimport Lula from '../img/lula.jpg';\r\nimport ComputerControl from '../components/ComputerControl';\r\nimport HUD from '../components/HUD';\r\nimport { bindActionCreator, bindActionCreators } from 'redux';\r\nimport * as fightActions from '../actions/fight';\r\nimport { connect } from 'react-redux'\r\n\r\nclass GameScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            playerSelection: {},\r\n            computerSelection: {},\r\n            playerChoise: '',\r\n            computerChoise: '',\r\n            resolveGame: false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            playerSelection: {\r\n                src: localStorage.getItem('@JoKenPo: playerSelectionSrc'),\r\n                alt: localStorage.getItem('@JoKenPo: playerSelectionAlt'),\r\n                name: localStorage.getItem('@JoKenPo: playerSelectionAlt')\r\n            },\r\n            computerSelection: {\r\n                src: localStorage.getItem('@JoKenPo: playerSelectionAlt') === 'Bolsonaro' ? Lula : Bolsonaro,\r\n                alt: localStorage.getItem('@JoKenPo: playerSelectionAlt') === 'Bolsonaro' ? 'Lula' : 'Bolsonaro',\r\n                name: localStorage.getItem('@JoKenPo: playerSelectionAlt') === 'Bolsonaro' ? 'Lula' : 'Bolsonaro'\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChoiseMade = (e) => {\r\n        this.setState({ playerChoise: e.target });\r\n\r\n        this.getComputerChoise();\r\n\r\n        this.setState({ resolveGame: true });\r\n    }\r\n\r\n\r\n    getComputerChoise = () => {\r\n        const Choises = [\r\n            {\r\n                src: Pedra,\r\n                alt: \"Pedra\"\r\n            },\r\n            {\r\n                src: Papel,\r\n                alt: \"Papel\"\r\n            },\r\n            {\r\n                src: Tesoura,\r\n                alt: \"Tesoura\"\r\n            }\r\n\r\n        ]\r\n\r\n        let randomChoise = Math.round(Math.random() * 2)\r\n        this.setState({ computerChoise: Choises[randomChoise] });\r\n    }\r\n\r\n    resolveGame = (playerChoise, computerChoise) => {\r\n        const { playerSelection, computerSelection } = this.state;\r\n        if (!playerChoise & !computerChoise) return '';\r\n        if (playerChoise === computerChoise) return 'Empate';\r\n        let winnerName = '';\r\n\r\n        if (playerChoise === 'Pedra') {\r\n            if (computerChoise === 'Papel') {\r\n                winnerName = computerSelection.name;\r\n                // this.damageLoser(winnerName);\r\n\r\n                // return `${computerSelection.name} Venceu!`;\r\n            }\r\n            if (computerChoise === 'Tesoura') {\r\n                winnerName = playerSelection.name;\r\n                // this.damageLoser(winnerName);\r\n\r\n                // return `${playerSelection.name} Venceu!`;\r\n            }\r\n        }\r\n\r\n        if (playerChoise === 'Papel') {\r\n            if (computerChoise === 'Tesoura') {\r\n                winnerName = computerSelection.name;\r\n                // this.damageLoser(winnerName);\r\n\r\n                // return `${computerSelection.alt} Venceu!`;\r\n            }\r\n            if (computerChoise === 'Pedra') {\r\n                winnerName = playerSelection.name;\r\n                // this.damageLoser(winnerName);\r\n\r\n                // return `${playerSelection.alt} Venceu!`;\r\n            }\r\n        }\r\n\r\n        if (playerChoise === 'Tesoura') {\r\n            if (computerChoise === 'Pedra') {\r\n                winnerName = computerSelection.name;\r\n                // this.damageLoser(winnerName);\r\n\r\n                // return `${computerSelection.alt} Venceu!`;\r\n            }\r\n            if (computerChoise === 'Papel') {\r\n                winnerName = playerSelection.name;\r\n                // this.damageLoser(winnerName);\r\n\r\n                // return `${playerSelection.alt} Venceu!`;\r\n            }\r\n        }\r\n\r\n        this.damageLoser(winnerName)\r\n        this.setState({ resolveGame: false })\r\n\r\n    }\r\n\r\n    damageLoser = (winnerName) => {\r\n        const { playerSelection, computerSelection } = this.state;\r\n\r\n\r\n        if (winnerName === playerSelection.name) {\r\n            this.props.doDamageComputer()\r\n            // let newHP = computerHP - 1\r\n            // this.setState({ computerHP: newHP });\r\n        }\r\n        else if (winnerName === computerSelection.name) {\r\n            this.props.doDamagePlayer()\r\n\r\n            // let newHP = playerHP - 1\r\n            // this.setState({ playerHP: newHP });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { playerChoise, computerChoise, playerSelection, computerSelection, resolveGame } = this.state;\r\n        const { playerHP, computerHP } = this.props;\r\n\r\n        return (\r\n            <div className=\"game-wrapper\">\r\n\r\n                <div className=\"hud-wrapper\">\r\n                    <HUD selection={computerSelection} name={computerSelection.name} HP={computerHP} />\r\n                    <ComputerControl />\r\n                </div>\r\n\r\n\r\n                <Game playerChoise={playerChoise} computerChoise={computerChoise} playerName={playerSelection.name} computerName={computerSelection.name} />\r\n\r\n                <div className=\"hud-wrapper\">\r\n                    <PlayerControl onClick={this.handleChoiseMade} />\r\n                    <HUD selection={playerSelection} name={playerSelection.name} HP={playerHP} />\r\n                </div>\r\n\r\n                {resolveGame ? <EndGame result={this.resolveGame(playerChoise.alt, computerChoise.alt)} playerName={playerSelection.alt} computerName={computerSelection.name} /> : null}\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    playerHP: state.playerHP,\r\n    computerHP: state.computerHP\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(fightActions, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameScreen);","import React, { Component } from 'react';\r\nimport Bolsonaro from '../img/bolso.jpg';\r\nimport Lula from '../img/lula.jpg';\r\n\r\n\r\nclass PlayerSelection extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playerSelection: ''\r\n        }\r\n    }\r\n    \r\n\r\n    handlePlayerSelection = (e) => {\r\n        localStorage.setItem('@JoKenPo: playerSelectionSrc', e.target.src)\r\n        localStorage.setItem('@JoKenPo: playerSelectionAlt', e.target.alt)\r\n        this.props.history.push('/game')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"game-wrapper\">\r\n                <h1>Escolha seu guerreirinho:</h1>\r\n                <div>\r\n                    <img src={Lula} alt=\"Lula\" onClick={this.handlePlayerSelection} />\r\n\r\n                </div>\r\n                <div>\r\n                    <img src={Bolsonaro} alt=\"Bolsonaro\" onClick={this.handlePlayerSelection} />\r\n\r\n                </div>\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerSelection;","import { combineReducers } from 'redux';\r\n\r\nimport todos from './todos';\r\nimport playerHP from './playerHP'\r\nimport computerHP from './computerHP'\r\n\r\nexport default combineReducers({\r\n    todos,\r\n    playerHP, \r\n    computerHP\r\n});\r\n","export default function todos(state = [], action) {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            return [...state, { \r\n                id: Math.random(), \r\n                text: action.text \r\n            }]\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","export default function playerHP(state = 10, action) {\r\n    switch (action.type) {\r\n        case 'DO_DMG_P':\r\n            return [state - 1]\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","export default function computerHP(state = 10, action) {\r\n    switch (action.type) {\r\n        case 'DO_DMG_C':\r\n            return [state - 1]\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport GameScreen from './pages/GameScreen';\nimport PlayerSelection from './pages/PlayerSelection';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n\n\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\" exact component={PlayerSelection} />\n            <Route path=\"/game\" component={GameScreen} />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}